# Client port of 4222 on all interfaces
port: {{ nats_client_port | default('4222') }}
net: {{ nats_listen_on | default('0.0.0.0') }}
# HTTP monitoring port
monitor_port: {{ nats_monitor_port | default('8222') }}

debug: "{{ nats_debug_logging | default('false') }}"
trace: "{{ nats_trace_logging | default('false') }}"
logtime: true

{% if nats_tls_enabled %}
tls {
  cert_file: "{{ nats_tls_cert_file }}"
  key_file:  "{{ nats_tls_key_file }}"
  ca_file:   "{{ nats_tls_ca_file }}"
  timeout: {{ nats_tls_timeout | default('0.5') }}
  verify: true
}
{% endif %}

# This is for clustering multiple servers together.
cluster {

  # Route connections to be received on any interface on port 6222
  port: {{ nats_route_port | default('6222') }}

  # Routes are protected, so need to use them with --routes flag
  # e.g. --routes=nats-route://ruser:T0pS3cr3t@otherdockerhost:6222
  authorization {
    user: {{ nats_auth_user | default('ruser') }}
    password: {{ nats_auth_password | default('T0pS3cr3t') }}
    timeout: {{ nats_auth_timeout | default('2') }}
  }

  routes = [
      {% for host in groups['nats'] %}
        nats-route://{{ hostvars[host].ansible_fqdn }}:{{ nats_cluster_port | default('6222') }}
      {% endfor %}
  ]
}
